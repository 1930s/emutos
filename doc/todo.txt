BIOS/XBIOS/BDOS
- implement XBIOS calls
- implement linea functions
- merge identical headers, and put them all in an include directory (?)
- check that RAM disks work (an easy way to test bdos under STonX)
- implement flopvbl (deselect idle drive), other TODOs in floppy.c
- VDI: code cleanup, Makefile, esclisa and gsxvars like in EmuTOS
- auto programs are not run after reset
- use extended argv specification in EmuCON
- check that VEC_TIMER (vector number 0x100) is called by bios every 50th sec
- check that VEC_CRITICALERR (0x101) is called when the BIOS encounters errors
- should hitting control-c terminate the current process? if so, how?
- is it really necessary to have both NULLPTR and NULPTR defined?
- move mem-only routines out of proc.c into umem.c or iumem.c
- check that EmuCON understands 'exit' (useful in .BAT scripts)
- improve Mediach()
- implement full XHDI 1.30
- add proper VIDEL init and selectable resolutions
- boot from C: (and make it selectable)
- Alt key pressed during boot should skip harddisk driver init
- rewrite nvram.c so it wouldn't need balloc(50) (no checksum necessary)
- move nvram_init to machine_detect so it could be used in screen.c:videl_init


VDI
- line drawing around boxes seems to be bad

AES
